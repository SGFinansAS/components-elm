name: CICD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  merge_group:
    types: [checks_requested]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Elm cache
        uses: actions/cache@v3
        with:
          path: ~/.elm
          key: ${{ runner.os }}-elm-${{ hashFiles('**/elm.json') }}
          restore-keys: ${{ runner.os }}-elm-

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 14.18.0
          cache: yarn

      # component library
      - name: Install dependencies
        run: yarn install --immutable --immutable-cache
      - name: Validate Elm code formatting
        run: yarn run elm-format src/ --validate
      - name: Elm review
        run: yarn run verify-lint

      # Explorer project
      - name: Install dependencies (explorer)
        run: cd explorer && yarn install --immutable --immutable-cache
      - name: Validate Elm code formatting (explorer)
        run: cd explorer && yarn run elm-format src/ --validate
      - name: Elm review (explorer)
        run: cd explorer && yarn run verify-lint
      - name: Build (explorer)
        run: cd explorer && yarn run build

      - name: Upload explorer project artifacts
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-pages-artifact@v2
        with:
          path: './explorer/public'

  deploy:
    needs: build
    if: github.ref == 'refs/heads/master'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
    # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
    concurrency:
      group: "pages"
      cancel-in-progress: false
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
